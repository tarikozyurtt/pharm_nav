{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar searchPrescriptionCode = function () {\n  var _ref = _asyncToGenerator(function* (code) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        var data = {\n          \"aspirin\": 2,\n          \"paracetamol\": 1\n        };\n        resolve(data);\n      }, 4000);\n    });\n  });\n  return function searchPrescriptionCode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default function HomeScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    prescriptionCode = _useState2[0],\n    setPrescriptionCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var handleSearch = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (prescriptionCode.length === 6) {\n        var uppercaseCode = prescriptionCode.toUpperCase();\n        try {\n          Keyboard.dismiss();\n          setIsLoading(true);\n          var result = yield searchPrescriptionCode(uppercaseCode);\n          console.log('Search Result:', result);\n        } catch (error) {\n          console.error('Error searching prescription code:', error);\n          Alert.alert('Error', 'An error occurred while searching. Please try again.');\n        } finally {\n          setIsLoading(false);\n        }\n      } else {\n        Alert.alert('Invalid Prescription Code', 'Please enter a valid 6-digit code.');\n      }\n    });\n    return function handleSearch() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"PharmNav\"\n    }), _jsx(Image, {\n      source: require(\"../../../assets/pharm-nav-icon.png\"),\n      style: styles.logo\n    }), !isLoading && _jsxs(View, {\n      style: styles.bottomContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Prescription Code\",\n        placeholderTextColor: \"#AFB1B6\",\n        onChangeText: function onChangeText(text) {\n          return setPrescriptionCode(text);\n        },\n        value: prescriptionCode,\n        maxLength: 6,\n        autoCapitalize: \"characters\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.findButton,\n        onPress: handleSearch,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Find Pharmacies\"\n        })\n      })]\n    }), isLoading && _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      }), _jsx(Text, {\n        children: \"Searcing nearest appropriate pharmacies...\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  bottomContainer: {\n    flex: 1,\n    alignItems: 'center',\n    width: '100%'\n  },\n  headerText: {\n    fontSize: 35,\n    marginTop: '10%',\n    color: \"#ac99d2\"\n  },\n  input: {\n    height: 40,\n    width: '60%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: '7%',\n    padding: 10,\n    borderRadius: 10\n  },\n  logo: {\n    width: 250,\n    height: 250,\n    borderRadius: 150,\n    marginTop: '8%'\n  },\n  findButton: {\n    marginTop: 20,\n    paddingHorizontal: 15,\n    paddingVertical: 4,\n    backgroundColor: \"#6f70ff\"\n  },\n  buttonText: {\n    fontSize: 15,\n    color: \"#FFFFFF\"\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: '20%',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.3)'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Button","TouchableOpacity","Image","StyleSheet","Alert","ActivityIndicator","Keyboard","TouchableWithoutFeedback","jsx","_jsx","jsxs","_jsxs","searchPrescriptionCode","_ref","_asyncToGenerator","code","Promise","resolve","reject","setTimeout","data","_x","apply","arguments","HomeScreen","_ref2","navigation","_useState","_useState2","_slicedToArray","prescriptionCode","setPrescriptionCode","_useState3","_useState4","isLoading","setIsLoading","handleSearch","_ref3","length","uppercaseCode","toUpperCase","dismiss","result","console","log","error","alert","style","styles","container","children","headerText","source","require","logo","bottomContainer","input","placeholder","placeholderTextColor","onChangeText","text","value","maxLength","autoCapitalize","findButton","onPress","buttonText","loadingContainer","size","color","create","flex","backgroundColor","alignItems","justifyContent","width","fontSize","marginTop","height","borderColor","borderWidth","padding","borderRadius","paddingHorizontal","paddingVertical","position","top","left","right","bottom"],"sources":["D:/PharmNav/pharm_nav/src/screens/HomeScreen/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Button, TouchableOpacity, Image, StyleSheet, Alert, ActivityIndicator, Keyboard, TouchableWithoutFeedback } from 'react-native';\r\n\r\nconst searchPrescriptionCode = async (code) => {\r\n    // Simulating a service call, replace with actual service call\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const data = { \"aspirin\": 2, \"paracetamol\": 1 }; // service call here\r\n            resolve(data);\r\n        }, 4000);\r\n    });\r\n};\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n    const [prescriptionCode, setPrescriptionCode] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSearch = async () => {\r\n        // Validate if the entered code is exactly 6 characters\r\n        if (prescriptionCode.length === 6) {\r\n            // Convert to uppercase\r\n            const uppercaseCode = prescriptionCode.toUpperCase();\r\n\r\n            try {\r\n                Keyboard.dismiss();\r\n                setIsLoading(true);\r\n\r\n                const result = await searchPrescriptionCode(uppercaseCode);\r\n                console.log('Search Result:', result);\r\n                // Handle the result as needed\r\n            } catch (error) {\r\n                console.error('Error searching prescription code:', error);\r\n                // Notify the user about the error\r\n                Alert.alert('Error', 'An error occurred while searching. Please try again.');\r\n            }\r\n            finally {\r\n                setIsLoading(false); // Stop loading, whether the call was successful or not\r\n            }\r\n        } else {\r\n            // Notify the user about the invalid code\r\n            Alert.alert('Invalid Prescription Code', 'Please enter a valid 6-digit code.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.headerText}>PharmNav</Text>\r\n            <Image\r\n                source={require('../../../assets/pharm-nav-icon.png')}\r\n                style={styles.logo}\r\n            />\r\n            {!isLoading && (\r\n                <View style={styles.bottomContainer}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Enter Prescription Code\"\r\n                        placeholderTextColor=\"#AFB1B6\"\r\n                        onChangeText={(text) => setPrescriptionCode(text)}\r\n                        value={prescriptionCode}\r\n                        maxLength={6}\r\n                        autoCapitalize=\"characters\"\r\n                    />\r\n                    <TouchableOpacity\r\n                        style={styles.findButton}\r\n                        onPress={handleSearch}\r\n                    >\r\n                        <Text style={styles.buttonText}>\r\n                        Find Pharmacies\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n            {isLoading && (\r\n                <View style={styles.loadingContainer}>\r\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n                    <Text>Searcing nearest appropriate pharmacies...</Text>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    bottomContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n    headerText: {\r\n        fontSize: 35,\r\n        marginTop: '10%',\r\n        color:\"#ac99d2\"\r\n    },\r\n    input: {\r\n        height: 40,\r\n        width: '60%',\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginTop: '7%',\r\n        padding: 10,\r\n        borderRadius:10\r\n    },\r\n    logo: {\r\n        width: 250,\r\n        height: 250,\r\n        borderRadius: 150,\r\n        marginTop: '8%',\r\n    },\r\n    findButton:{\r\n        marginTop:20,\r\n        paddingHorizontal:15,\r\n        paddingVertical:4,\r\n        backgroundColor:\"#6f70ff\",\r\n        \r\n    },\r\n    buttonText:{\r\n        fontSize:15,\r\n        color:\"#FFFFFF\"\r\n    },\r\n    loadingContainer: {\r\n        position: 'absolute',\r\n        top: '20%',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)', // Semi-transparent white background\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}