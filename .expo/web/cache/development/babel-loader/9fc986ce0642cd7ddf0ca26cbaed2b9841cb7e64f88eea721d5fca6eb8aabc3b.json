{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Ionicon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PharmacyListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    prescriptionCode = _useState2[0],\n    setPrescriptionCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.return,\n      children: _jsx(Ionicon, {\n        size: \"large\",\n        name: \"chevron-back-outline\"\n      })\n    }), _jsx(Text, {\n      style: styles.headerText,\n      children: \"PharmNav\"\n    }), _jsx(Image, {\n      source: require(\"../../../assets/pharm-nav-icon.png\"),\n      style: styles.logo\n    }), !isLoading && _jsxs(View, {\n      style: styles.bottomContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Prescription Code\",\n        placeholderTextColor: \"#AFB1B6\",\n        onChangeText: function onChangeText(text) {\n          return setPrescriptionCode(text);\n        },\n        value: prescriptionCode,\n        maxLength: 6,\n        autoCapitalize: \"characters\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.findButton,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Find Pharmacies\"\n        })\n      })]\n    }), isLoading && _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      }), _jsx(Text, {\n        children: \"Searcing nearest appropriate pharmacies...\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  return: {\n    marginTop: 10,\n    marginLeft: 10,\n    marginRight: \"auto\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  bottomContainer: {\n    flex: 1,\n    alignItems: 'center',\n    width: '100%'\n  },\n  headerText: {\n    fontSize: 35,\n    marginTop: '10%',\n    color: \"#ac99d2\"\n  },\n  input: {\n    height: 40,\n    width: '60%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: '7%',\n    padding: 10,\n    borderRadius: 10\n  },\n  logo: {\n    width: 250,\n    height: 250,\n    borderRadius: 150,\n    marginTop: '8%'\n  },\n  findButton: {\n    marginTop: 20,\n    backgroundColor: \"#6f70ff\",\n    borderRadius: 5,\n    paddingHorizontal: 20,\n    paddingVertical: 4\n  },\n  buttonText: {\n    fontSize: 17,\n    color: \"#FFFFFF\",\n    paddingHorizontal: 20,\n    paddingVertical: 4\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: '20%',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.3)'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Button","TouchableOpacity","Image","StyleSheet","Alert","ActivityIndicator","Keyboard","TouchableWithoutFeedback","Ionicon","jsx","_jsx","jsxs","_jsxs","PharmacyListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","prescriptionCode","setPrescriptionCode","_useState3","_useState4","isLoading","setIsLoading","style","styles","container","children","return","size","name","headerText","source","require","logo","bottomContainer","input","placeholder","placeholderTextColor","onChangeText","text","value","maxLength","autoCapitalize","findButton","buttonText","loadingContainer","color","create","marginTop","marginLeft","marginRight","flex","backgroundColor","alignItems","justifyContent","width","fontSize","height","borderColor","borderWidth","padding","borderRadius","paddingHorizontal","paddingVertical","position","top","left","right","bottom"],"sources":["D:/PharmNav/pharm_nav/src/screens/Pharmacy/PharmacyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Button, TouchableOpacity, Image, StyleSheet, Alert, ActivityIndicator, Keyboard, TouchableWithoutFeedback } from 'react-native';\r\nimport Ionicon from \"@expo/vector-icons/Ionicons\"\r\n\r\n\r\nexport default function PharmacyListScreen({ navigation }) {\r\n    const [prescriptionCode, setPrescriptionCode] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity style={styles.return}>\r\n                <Ionicon size=\"large\" name = \"chevron-back-outline\"/>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.headerText}>PharmNav</Text>\r\n            <Image\r\n                source={require('../../../assets/pharm-nav-icon.png')}\r\n                style={styles.logo}\r\n            />\r\n            {!isLoading && (\r\n                <View style={styles.bottomContainer}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Enter Prescription Code\"\r\n                        placeholderTextColor=\"#AFB1B6\"\r\n                        onChangeText={(text) => setPrescriptionCode(text)}\r\n                        value={prescriptionCode}\r\n                        maxLength={6}\r\n                        autoCapitalize=\"characters\"\r\n                    />\r\n                    <TouchableOpacity\r\n                        style={styles.findButton}\r\n                    >\r\n                        <Text style={styles.buttonText}>\r\n                            Find Pharmacies\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n            {isLoading && (\r\n                <View style={styles.loadingContainer}>\r\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n                    <Text>Searcing nearest appropriate pharmacies...</Text>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    return:{\r\n        marginTop:10,\r\n        marginLeft:10,\r\n        marginRight:\"auto\"\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    bottomContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n    headerText: {\r\n        fontSize: 35,\r\n        marginTop: '10%',\r\n        color:\"#ac99d2\"\r\n    },\r\n    input: {\r\n        height: 40,\r\n        width: '60%',\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginTop: '7%',\r\n        padding: 10,\r\n        borderRadius:10\r\n    },\r\n    logo: {\r\n        width: 250,\r\n        height: 250,\r\n        borderRadius: 150,\r\n        marginTop: '8%',\r\n    },\r\n    findButton:{\r\n        marginTop:20,\r\n        backgroundColor:\"#6f70ff\",\r\n        borderRadius:5,\r\n        paddingHorizontal:20,\r\n        paddingVertical:4,\r\n    },\r\n    buttonText:{\r\n        fontSize:17,\r\n        color:\"#FFFFFF\",\r\n        paddingHorizontal:20,\r\n        paddingVertical:4,\r\n    },\r\n    loadingContainer: {\r\n        position: 'absolute',\r\n        top: '20%',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)', // Semi-transparent white background\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}