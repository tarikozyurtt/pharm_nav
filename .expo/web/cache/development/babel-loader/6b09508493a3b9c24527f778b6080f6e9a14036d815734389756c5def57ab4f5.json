{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SupportScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pharmacyName = _useState2[0],\n    setPharmacyName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pharmacistName = _useState4[0],\n    setPharmacistName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    code = _useState8[0],\n    setCode = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    problem = _useState10[0],\n    setProblem = _useState10[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../../../assets/pharm-nav-icon.png\"),\n      style: styles.logo\n    }), _jsx(Text, {\n      style: styles.headerText,\n      children: \"About PharmNav\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'Pharmacy Name',\n      placeholderTextColor: \"#AFB1B6\",\n      value: pharmacyName,\n      onChangeText: function onChangeText(text) {\n        return setPharmacyName(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'Pharmacist Name',\n      placeholderTextColor: \"#AFB1B6\",\n      value: pharmacistName,\n      onChangeText: function onChangeText(text) {\n        return setPharmacistName(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'Email',\n      placeholderTextColor: \"#AFB1B6\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'Prescription Code',\n      placeholderTextColor: \"#AFB1B6\",\n      value: code,\n      onChangeText: function onChangeText(text) {\n        return setCode(text);\n      }\n    }), _jsx(TextInput, {\n      multiline: true,\n      style: styles.inputProblem,\n      placeholder: 'Explain Your Problem',\n      placeholderTextColor: \"#AFB1B6\",\n      value: problem,\n      onChangeText: function onChangeText(text) {\n        return setProblem(text);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20\n  },\n  headerText: {\n    fontSize: 30,\n    color: \"#ac99d2\"\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    borderRadius: 150,\n    marginTop: '8%'\n  },\n  input: {\n    backgroundColor: \"#FFF\",\n    width: \"80%\",\n    paddingHorizontal: 4,\n    paddingVertical: 10,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: \"#AFB1B6\",\n    marginTop: 20\n  },\n  inputProblem: {\n    backgroundColor: \"#FFF\",\n    width: \"80%\",\n    paddingHorizontal: 4,\n    height: 60,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: \"#AFB1B6\",\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SupportScreen","_useState","_useState2","_slicedToArray","pharmacyName","setPharmacyName","_useState3","_useState4","pharmacistName","setPharmacistName","_useState5","_useState6","email","setEmail","_useState7","_useState8","code","setCode","_useState9","_useState10","problem","setProblem","View","style","styles","container","children","Image","source","require","logo","Text","headerText","TextInput","input","placeholder","placeholderTextColor","value","onChangeText","text","multiline","inputProblem","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","color","width","height","borderRadius","marginTop","paddingHorizontal","paddingVertical","borderWidth","borderColor"],"sources":["D:/PharmNav/pharm_nav/src/screens/SupportScreen/SupportScreen.js"],"sourcesContent":["import { View, Text, StyleSheet, Image, TextInput } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function SupportScreen() {\r\n\r\n  const [pharmacyName, setPharmacyName] = useState('');\r\n  const [pharmacistName, setPharmacistName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [problem, setProblem] = useState('');\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n                source={require('../../../assets/pharm-nav-icon.png')}\r\n                style={styles.logo}\r\n      />\r\n      <Text style={styles.headerText}>About PharmNav</Text>\r\n\r\n      <TextInput style={styles.input} placeholder={'Pharmacy Name'} placeholderTextColor=\"#AFB1B6\"  value={pharmacyName} onChangeText={(text)=>setPharmacyName(text)}/>\r\n      <TextInput style={styles.input} placeholder={'Pharmacist Name'} placeholderTextColor=\"#AFB1B6\"  value={pharmacistName} onChangeText={(text)=>setPharmacistName(text)}/>\r\n      <TextInput style={styles.input} placeholder={'Email'} placeholderTextColor=\"#AFB1B6\" value={email} onChangeText={(text)=>setEmail(text)}/>   \r\n      <TextInput style={styles.input} placeholder={'Prescription Code'} placeholderTextColor=\"#AFB1B6\" value={code} onChangeText={(text)=>setCode(text)}/>   \r\n      <TextInput  multiline={true} style={styles.inputProblem} placeholder={'Explain Your Problem'} placeholderTextColor=\"#AFB1B6\" value={problem} onChangeText={(text)=>setProblem(text)}/>   \r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: 30,\r\n    color:\"#ac99d2\"\r\n  },\r\n  logo: {\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 150,\r\n    marginTop: '8%',\r\n  },\r\n  input:{\r\n    backgroundColor:\"#FFF\",\r\n    width:\"80%\",\r\n    paddingHorizontal:4,\r\n    paddingVertical:10,\r\n    borderRadius:6,\r\n    borderWidth:2,\r\n    borderColor:\"#AFB1B6\",\r\n    marginTop:20,\r\n  },\r\n  inputProblem:{\r\n    backgroundColor:\"#FFF\",\r\n    width:\"80%\",\r\n    paddingHorizontal:4,\r\n    height:60,\r\n    borderRadius:6,\r\n    borderWidth:2,\r\n    borderColor:\"#AFB1B6\",\r\n    marginTop:20,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}