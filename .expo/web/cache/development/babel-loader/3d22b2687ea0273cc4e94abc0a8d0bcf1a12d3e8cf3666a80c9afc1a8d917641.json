{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicon from \"@expo/vector-icons/Ionicons\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport HomeScreen from \"./HomeScreen/HomeScreen\";\nimport ProfileScreen from \"./ProfileScreen/ProfileScreen\";\nimport AboutScreen from \"./AboutScreen/AboutScreen\";\nimport SupportScreen from \"./SupportScreen/SupportScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AlertDialog = function AlertDialog(title, message) {\n  return Alert.alert(title, message, [{\n    text: 'OK',\n    onPress: function onPress() {\n      return console.log('OK Pressed');\n    }\n  }]);\n};\nexport default function Dashboard() {\n  var Tabs = createBottomTabNavigator();\n  return _jsxs(Tabs.Navigator, {\n    children: [_jsx(Tabs.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: \"Home\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(props) {\n          return _jsx(Ionicon, _objectSpread({\n            name: \"home-outline\",\n            size: 25\n          }, props));\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"ProfileStack\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(props) {\n          return _jsx(Ionicon, _objectSpread({\n            name: \"person\"\n          }, props));\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"FriendListStack\",\n      component: AboutScreen,\n      options: {\n        title: \"About\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(props) {\n          return _jsx(FontAwesome5, _objectSpread({\n            name: \"user-friends\"\n          }, props));\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Support\",\n      component: SupportScreen,\n      options: {\n        title: \"Support\",\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(props) {\n          return _jsx(FontAwesome5, _objectSpread({\n            name: \"user-friends\"\n          }, props));\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["AsyncStorage","useState","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicon","AntDesign","FontAwesome5","HomeScreen","ProfileScreen","AboutScreen","SupportScreen","jsx","_jsx","jsxs","_jsxs","AlertDialog","title","message","Alert","alert","text","onPress","console","log","Dashboard","Tabs","Navigator","children","Screen","name","component","options","headerShown","tabBarIcon","props","_objectSpread","size"],"sources":["D:/PharmNav/pharm_nav/src/screens/Dashboard.js"],"sourcesContent":["import { StyleSheet, Text, View, TextInput, TouchableOpacity, ScrollView, Alert } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {useState} from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport Ionicon from \"@expo/vector-icons/Ionicons\"\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport HomeScreen from './HomeScreen/HomeScreen';\r\nimport ProfileScreen from './ProfileScreen/ProfileScreen';\r\nimport AboutScreen from './AboutScreen/AboutScreen';\r\nimport SupportScreen from './SupportScreen/SupportScreen';\r\n\r\n\r\nconst AlertDialog = (title,message) =>\r\nAlert.alert(title, message, [\r\n  {text: 'OK', onPress: () => console.log('OK Pressed')},\r\n]);\r\n\r\nexport default function Dashboard(){\r\n\r\n    const Tabs = createBottomTabNavigator()\r\n\r\n    return(\r\n      <Tabs.Navigator>\r\n        <Tabs.Screen name=\"Home\" component={HomeScreen} options={{title:\"Home\", headerShown:false, tabBarIcon: (props) => <Ionicon name = \"home-outline\" size={25} {...props}/>}}/>\r\n        <Tabs.Screen name=\"ProfileStack\" component={ProfileScreen} options={{title:\"Profile\", headerShown:false, tabBarIcon: (props) => <Ionicon name = \"person\" {...props}/>}}/>\r\n        <Tabs.Screen name=\"FriendListStack\" component={AboutScreen} options={{title:\"About\", headerShown:false, tabBarIcon: (props) => <FontAwesome5 name = \"user-friends\" {...props}/>}}/>\r\n        <Tabs.Screen name=\"Support\" component={SupportScreen} options={{title:\"Support\", headerShown:false, tabBarIcon: (props) => <FontAwesome5 name = \"user-friends\" {...props}/>}}/>\r\n      </Tabs.Navigator>\r\n    )\r\n}"],"mappings":";;;;;;;;;;AACA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,WAAW;AAClB,OAAOC,aAAa;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1D,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAACC,OAAO;EAAA,OAClCC,KAAK,CAACC,KAAK,CAACH,KAAK,EAAEC,OAAO,EAAE,CAC1B;IAACG,IAAI,EAAE,IAAI;IAAEC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAAA;EAAA,CAAC,CACvD,CAAC;AAAA;AAEF,eAAe,SAASC,SAASA,CAAA,EAAE;EAE/B,IAAMC,IAAI,GAAGtB,wBAAwB,CAAC,CAAC;EAEvC,OACEW,KAAA,CAACW,IAAI,CAACC,SAAS;IAAAC,QAAA,GACbf,IAAA,CAACa,IAAI,CAACG,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEvB,UAAW;MAACwB,OAAO,EAAE;QAACf,KAAK,EAAC,MAAM;QAAEgB,WAAW,EAAC,KAAK;QAAEC,UAAU,EAAE,SAAAA,WAACC,KAAK;UAAA,OAAKtB,IAAA,CAACR,OAAO,EAAA+B,aAAA;YAACN,IAAI,EAAG,cAAc;YAACO,IAAI,EAAE;UAAG,GAAKF,KAAK,CAAE,CAAC;QAAA;MAAA;IAAE,CAAC,CAAC,EAC3KtB,IAAA,CAACa,IAAI,CAACG,MAAM;MAACC,IAAI,EAAC,cAAc;MAACC,SAAS,EAAEtB,aAAc;MAACuB,OAAO,EAAE;QAACf,KAAK,EAAC,SAAS;QAAEgB,WAAW,EAAC,KAAK;QAAEC,UAAU,EAAE,SAAAA,WAACC,KAAK;UAAA,OAAKtB,IAAA,CAACR,OAAO,EAAA+B,aAAA;YAACN,IAAI,EAAG;UAAQ,GAAKK,KAAK,CAAE,CAAC;QAAA;MAAA;IAAE,CAAC,CAAC,EACzKtB,IAAA,CAACa,IAAI,CAACG,MAAM;MAACC,IAAI,EAAC,iBAAiB;MAACC,SAAS,EAAErB,WAAY;MAACsB,OAAO,EAAE;QAACf,KAAK,EAAC,OAAO;QAAEgB,WAAW,EAAC,KAAK;QAAEC,UAAU,EAAE,SAAAA,WAACC,KAAK;UAAA,OAAKtB,IAAA,CAACN,YAAY,EAAA6B,aAAA;YAACN,IAAI,EAAG;UAAc,GAAKK,KAAK,CAAE,CAAC;QAAA;MAAA;IAAE,CAAC,CAAC,EACnLtB,IAAA,CAACa,IAAI,CAACG,MAAM;MAACC,IAAI,EAAC,SAAS;MAACC,SAAS,EAAEpB,aAAc;MAACqB,OAAO,EAAE;QAACf,KAAK,EAAC,SAAS;QAAEgB,WAAW,EAAC,KAAK;QAAEC,UAAU,EAAE,SAAAA,WAACC,KAAK;UAAA,OAAKtB,IAAA,CAACN,YAAY,EAAA6B,aAAA;YAACN,IAAI,EAAG;UAAc,GAAKK,KAAK,CAAE,CAAC;QAAA;MAAA;IAAE,CAAC,CAAC;EAAA,CACjK,CAAC;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}